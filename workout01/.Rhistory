summarise(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000),
desc(total_salary))
#b.
as.data.frame(team_salaries)
#c.
team_salaries$team = factor(team_salaries$team, levels = team_salaries$team[length(team_salaries$team):1])
ggplot(team_salaries, aes(team, total_salary)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") +
coord_flip() +
ylab("Total Salary (in millions)") +
xlab("Team") +
ggtitle("NBA Teams Ranked by Total Salary")
#a.
team_points <- arrange(
summarise(
group_by(dat, team),
total_points = sum(points) / 1000000,
mean_points = mean(points) / 1000000,
median_points = median(points) / 1000000),
desc(total_points))
#b.
as.data.frame(team_points)
#c.
team_points$team = factor(team_points$team, levels = team_points$team[length(team_points$team):1])
ggplot(team_points, aes(team, total_points)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = mean(team_points$total_points), color = "red") +
coord_flip() +
ylab("Total Scored Points") +
xlab("Team") +
ggtitle("NBA Teams Ranked by Total Scored Points")
#a.
team_salaries <- arrange(
summarise(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000),
desc(total_salary))
#b.
as.data.frame(team_salaries)
#c.
ggplot(team_salaries, aes(reorder(team, -total_salary), total_salary)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") +
coord_flip() +
ylab("Total Salary (in millions)") +
xlab("Team") +
ggtitle("NBA Teams Ranked by Total Salary")
#a.
team_salaries <- arrange(
summarise(
group_by(dat, team),
total_salary = sum(salary) / 1000000,
mean_salary = mean(salary) / 1000000,
median_salary = median(salary) / 1000000),
desc(total_salary))
#b.
as.data.frame(team_salaries)
#c.
ggplot(team_salaries, aes(reorder(team, total_salary), total_salary)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = mean(team_salaries$total_salary), color = "red") +
coord_flip() +
ylab("Total Salary (in millions)") +
xlab("Team") +
ggtitle("NBA Teams Ranked by Total Salary")
#a.
team_points <- arrange(
summarise(
group_by(dat, team),
total_points = sum(points) / 1000000,
mean_points = mean(points) / 1000000,
median_points = median(points) / 1000000),
desc(total_points))
#b.
as.data.frame(team_points)
#c.
ggplot(team_points, aes(reorder(team, total_points), total_points)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = mean(team_points$total_points), color = "red") +
coord_flip() +
ylab("Total Scored Points") +
xlab("Team") +
ggtitle("NBA Teams Ranked by Total Scored Points")
#a.
points_salary <- inner_join(team_salaries, team_points, by = "team")
#b.
summary(points_salary)
#c.
points_salary <- mutate(points_salary, cost_point = total_salary / total_points)
summary(
select(points_salary, cost_point)
)
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point))
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "blue") +
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "blue")
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point))
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "blue")
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "blue", aes(size = 2))
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "red")
#a.
points_salary <- inner_join(team_salaries, team_points, by = "team")
#b.
summary(points_salary)
#c.
points_salary <- mutate(points_salary, cost_point = total_salary / total_points)
#d.
summary(
select(points_salary, cost_point)
)
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "red") +
xlabel("Team") +
ylabel("Cost per Point (Dollars/Point)") +
ggtitle("NBA Teams Ranked by Cost Per Point")
#a.
points_salary <- inner_join(team_salaries, team_points, by = "team")
#b.
summary(points_salary)
#c.
points_salary <- mutate(points_salary, cost_point = total_salary / total_points)
#d.
summary(
select(points_salary, cost_point)
)
#e.
ggplot(points_salary, aes(reorder(team, cost_point), cost_point)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_hline(yintercept = mean(points_salary$cost_point), color = "red") +
xlab("Team") +
ylab("Cost per Point (Dollars/Point)") +
ggtitle("NBA Teams Ranked by Cost Per Point")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_scatter() +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
ggtitle("NBA Teams Ranked by Cost Per Point")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_point() +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
ggtitle("NBA Teams Ranked by Cost Per Point")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_point(aes(color = cost_point)) +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
ggtitle("NBA Teams Ranked by Cost Per Point")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_point(aes(color = cost_point)) +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
ggtitle("Mean salary vs Mean Points of NBA Teams")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_point(aes(color = cost_point)) +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
legend(title = "Cost/Point") +
ggtitle("Mean salary vs Mean Points of NBA Teams")
#f.
ggplot(points_salary, aes(mean_salary, mean_points)) +
geom_point(aes(color = cost_point)) +
xlab("Mean Salary (millions of dollars)") +
ylab("Mean Points") +
labs(color = "Cost/Point") +
ggtitle("Mean salary vs Mean Points of NBA Teams")
ls
library(ggplot2)
?ggplot
ls
getwd()
write.csv()
write.csv(
x=mtcars,
file='stat133/labs/stat133-lab05/exports.csv'
)
sink(stat133/labs/stat133-lab05/summary-mpg-disp.txt'')
sink(file='stat133/labs/stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
sink(file='stat133/labs/stat133-lab05/exports/dataset.csv')
sink(file='stat133/labs/stat133-lab05/exports/dataset.txt')
sink()
write.csv(
x = select(mtcars, c('mpg', 'disp', 'hp')),
file = 'stat133-labs/stat133-lab05/exports/dataset.csv'
)
write.csv(
x = mtcars,
file = 'stat133-labs/stat133-lab05/exports/dataset.csv'
)
pwd()
getwd()
write.csv(
x = mtcars,
file = './stat133-labs/stat133-lab05/exports/dataset.csv'
)
write.csv(
x = mtcars,
file = '~/stat133-labs/stat133-lab05/exports/dataset.csv'
)
write.csv(
x = mtcars,
file = 'stat133-labs/stat133-lab05/exports/dataset.csv'
)
write.csv(
x = mtcars,
file = 'stat133-labs/stat133-lab05/dataset.csv'
)
write.csv(
x = select(mtcars, c('mpg', 'disp', 'hp')),
file = 'stat133/labs/stat133-lab05/exports/dataset.csv'
)
write.csv(
x = select(mtcars, c('mpg', 'disp', 'hp')),
file = 'stat133/labs/stat133-lab05/dataset.csv'
)
write.csv(
x = select(mtcars, c('mpg', 'disp', 'hp')),
file = 'stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='stat133/labs/stat133-lab05/exports.csv'
)
getwd()
write.csv(x=mtcars, file='stat133/labs/stat133-lab05/exports.csv')
write.csv(x=mtcars, file='stat133/labs/stat133-lab05/exports/exports.csv')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='./stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='C/Users/Warren/Desktop/stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='C:/Users/Warren/Desktop/stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports.csv'
)
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/exports.csv'
)
#Export data frame with columns mpg, disp, hp to a CSV file dataset.csv
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/dataset.csv'
)
#Export output of str() on mtcars to text file called mtcars-structure.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/mtcars-structure.txt")
str(mtcars)
sink()
cars.txt
#Export summary() of entire data frame mtcars to text file summary-mtcars.txt
sink(file = "./stat133/labs/stat133-lab05/exports/summary-mtcars.txt")
#Export data frame with columns mpg, disp, hp to a CSV file dataset.csv
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/dataset.csv'
)
#Export output of str() on mtcars to text file called mtcars-structure.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/mtcars-structure.txt")
str(mtcars)
sink()
#Export summary() of entire data frame mtcars to text file summary-mtcars.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/summary-mtcars.txt")
summary(mtcars)
sink()
?png
#Export data frame with columns mpg, disp, hp to a CSV file dataset.csv
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/dataset.csv'
)
#Export output of str() on mtcars to text file called mtcars-structure.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/mtcars-structure.txt")
str(mtcars)
sink()
#Export summary() of entire data frame mtcars to text file summary-mtcars.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/summary-mtcars.txt")
summary(mtcars)
sink()
#Save scatterplot between mpg and wt
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = "Miles per Gallon", ylab = "Weight")
dev.off()
#Save higher resolution of scatterplot between hp and wt.
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png",
antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
dev.off()
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png", res = 300,
antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png", res = 200,
antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
dev.off()
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png",
res = 100, antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
dev.off()
#Save jpeg of histogram of mpg with dimensions 600x400
jpeg(file = "~/stat133/labs/stat133-lab05/exports/histogram-mpg.jpeg",
width = 600, height = 400)
hist(mtcars$mpg)
dev.off()
?hist
?pdf
?geom_point
?ggsave
#Export data frame with columns mpg, disp, hp to a CSV file dataset.csv
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/dataset.csv'
)
#Export output of str() on mtcars to text file called mtcars-structure.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/mtcars-structure.txt")
str(mtcars)
sink()
#Export summary() of entire data frame mtcars to text file summary-mtcars.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/summary-mtcars.txt")
summary(mtcars)
sink()
#Save scatterplot between mpg and wt
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = "Miles per Gallon", ylab = "Weight")
dev.off()
#Save higher resolution of scatterplot between hp and wt.
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png",
res = 100, antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
dev.off()
#Save jpeg of histogram of mpg with dimensions 600x400
jpeg(file = "~/stat133/labs/stat133-lab05/exports/histogram-mpg.jpeg",
width = 600, height = 400)
hist(mtcars$mpg, xlab = "Miles per Gallon")
dev.off()
#Save previous histogram of mpg in PDF format with dimensions 7x5 inches
pdf(file = "~/stat133/labs/stat133-lab05/exports/histogram-mpg.pdf",
width = 7, height = 5)
hist(mtcars$mpg, xlab = "Miles per Gallon")
dev.off()
#Use ggplot to make scatterplot of mpg and dist and save in PDF with dimensions 7x5 inches
gg_mpg_dist = ggplot(mtcars, aes(x = mpg, y = dist)) +
geom_point(aes(alpha = 0.8))
ggsave(filename = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-disp.pdf",
width = 7, height = 5)
ggsave(filename = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-disp.pdf",
plot = gg_mpg_dist, width = 7, height = 5)
gg_mpg_dist
ggplot(mtcars, aes(x = mpg, y = dist)) +
geom_point()
ggplot(mtcars, aes(x = "mpg", y = "dist")) +
geom_point()
ggplot(mtcars, aes(x = "mpg", y = "dist")) +
geom_point()
gg_mpg_dist = ggplot(mtcars, aes(x = "mpg", y = "dist")) +
geom_point()
ggsave(filename = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-disp.pdf",
plot = gg_mpg_dist, width = 7, height = 5)
ggplot(data = mtcars, aes(x = "mpg", y = "dist")) +
geom_point()
ggplot(data = mtcars, aes(x = mpg, y = dist)) +
geom_point()
mtcars$dist
#Export data frame with columns mpg, disp, hp to a CSV file dataset.csv
write.csv(
x=select(mtcars, c('mpg', 'disp', 'hp')),
file='~/stat133/labs/stat133-lab05/exports/dataset.csv'
)
#Export output of str() on mtcars to text file called mtcars-structure.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/mtcars-structure.txt")
str(mtcars)
sink()
#Export summary() of entire data frame mtcars to text file summary-mtcars.txt
sink(file = "~/stat133/labs/stat133-lab05/exports/summary-mtcars.txt")
summary(mtcars)
sink()
#Save scatterplot between mpg and wt
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt, pch = 20,
xlab = "Miles per Gallon", ylab = "Weight")
dev.off()
#Save higher resolution of scatterplot between hp and wt.
png(file = "~/stat133/labs/stat133-lab05/exports/scatterplot-hp-wt.png",
res = 100, antialias = "cleartype")
plot(mtcars$hp, mtcars$wt, pch = 20,
xlab = "Gross Horsepower", ylab = "Weight (1000 lbs)")
dev.off()
#Save jpeg of histogram of mpg with dimensions 600x400
jpeg(file = "~/stat133/labs/stat133-lab05/exports/histogram-mpg.jpeg",
width = 600, height = 400)
hist(mtcars$mpg, xlab = "Miles per Gallon")
dev.off()
#Save previous histogram of mpg in PDF format with dimensions 7x5 inches
pdf(file = "~/stat133/labs/stat133-lab05/exports/histogram-mpg.pdf",
width = 7, height = 5)
hist(mtcars$mpg, xlab = "Miles per Gallon")
dev.off()
#Use ggplot to make scatterplot of mpg and disp and save in PDF with dimensions 7x5 inches
gg_mpg_dist = ggplot(data = mtcars, aes(x = mpg, y = disp)) +
geom_point()
ggsave(filename = "~/stat133/labs/stat133-lab05/exports/scatterplot-mpg-disp.pdf",
plot = gg_mpg_dist, width = 7, height = 5)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
x <- c(1, 2, 3, 4)
x[c(1)]
x[c(1, 2)]
x[x/x]
?rep
rep(1:3, 2)
matrix(1:12, nrows=4, ncols=3)
?matrix
matrix(1:12, nrow=4, ncol=3)
?:
help(:)
seq(1.0, 2.0, 0.1)
rep(1:3, 2)
?rep
??colon
??:
??':'
?":"
demo()
list(num = c(1, 2, 3), words = c("Hello", "world"))
len(list(num = c(1, 2, 3), words = c("Hello", "world"))$words)
length(list(num = c(1, 2, 3), words = c("Hello", "world"))$words)
length(list(num = c(1, 2, 3), words = c("Hello", "world"))$num)
typeof((c(1, 2))^2)
typeof((c(FALSE, TRUE))^2)
(c(FALSE, TRUE))^2
bacon = FALSE
bacon[2] = TRUE
lettuce = bacon + 1L
source('~/stat133/workouts/hw-stat133-TheWarrenG/workout01/code/make-shot-charts-script.R', echo=TRUE)
getwd()
setwd("~/stat133")
setwd("workouts/hw-stat133-TheWarrenG/workout01/report/")
source('~/stat133/workouts/hw-stat133-TheWarrenG/workout01/code/make-shot-charts-script.R', echo=TRUE)
setwd("..")
source('~/stat133/workouts/hw-stat133-TheWarrenG/workout01/code/make-shot-charts-script.R', echo=TRUE)
